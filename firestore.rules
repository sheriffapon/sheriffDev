/**
 * @description This ruleset enforces a public read, owner-write model for reviews. Anyone can read the reviews, but only authenticated users can create, update, or delete them.
 * @dataStructure The data is structured with projects and reviews at the top level. Reviews are publicly readable, but creating, updating and deleting require authentication.
 * @keySecurityDecisions Public read access for reviews allows for open access to user feedback, but all write operations require authentication.
 * Reviews are not owned by specific users, so any authenticated user can edit or delete any review.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read the project details.
     * @path /projects/{projectId}
     * @allow (get, list) Any user can read project data.
     * @deny (create, update, delete) No one can create, update, or delete project data.
     * @principle Public read access for project details.
     */
    match /projects/{projectId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows authenticated users to create, update, and delete reviews. Anyone can read.
     * @path /reviews/{reviewId}
     * @allow (get, list) Any user can read reviews.
     * @allow (create) An authenticated user can create a review.
     * @allow (update, delete) An authenticated user can update or delete a review.
     * @deny (create) A non-authenticated user cannot create a review.
     * @deny (update, delete) A non-authenticated user cannot update or delete a review.
     * @principle Authenticated users can manage reviews.
     */
    match /reviews/{reviewId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Checks if the user is signed in.
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}